export default globalThis.rxjs;

export const { Observable } = globalThis.rxjs;
export const { ConnectableObservable } = globalThis.rxjs;
export const { observable } = globalThis.rxjs;
export const { animationFrames } = globalThis.rxjs;
export const { Subject } = globalThis.rxjs;
export const { BehaviorSubject } = globalThis.rxjs;
export const { ReplaySubject } = globalThis.rxjs;
export const { AsyncSubject } = globalThis.rxjs;
export const { asap, asapScheduler } = globalThis.rxjs;
export const { async, asyncScheduler } = globalThis.rxjs;
export const { queue, queueScheduler } = globalThis.rxjs;
export const { animationFrame, animationFrameScheduler } = globalThis.rxjs;
export const { VirtualTimeScheduler, VirtualAction } = globalThis.rxjs;
export const { Scheduler } = globalThis.rxjs;
export const { Subscription } = globalThis.rxjs;
export const { Subscriber } = globalThis.rxjs;
export const { Notification, NotificationKind } = globalThis.rxjs;
export const { pipe } = globalThis.rxjs;
export const { noop } = globalThis.rxjs;
export const { identity } = globalThis.rxjs;
export const { isObservable } = globalThis.rxjs;
export const { lastValueFrom } = globalThis.rxjs;
export const { firstValueFrom } = globalThis.rxjs;
export const { ArgumentOutOfRangeError } = globalThis.rxjs;
export const { EmptyError } = globalThis.rxjs;
export const { NotFoundError } = globalThis.rxjs;
export const { ObjectUnsubscribedError } = globalThis.rxjs;
export const { SequenceError } = globalThis.rxjs;
export const { TimeoutError } = globalThis.rxjs;
export const { UnsubscriptionError } = globalThis.rxjs;
export const { bindCallback } = globalThis.rxjs;
export const { bindNodeCallback } = globalThis.rxjs;
export const { combineLatest } = globalThis.rxjs;
export const { concat } = globalThis.rxjs;
export const { connectable } = globalThis.rxjs;
export const { defer } = globalThis.rxjs;
export const { empty } = globalThis.rxjs;
export const { forkJoin } = globalThis.rxjs;
export const { from } = globalThis.rxjs;
export const { fromEvent } = globalThis.rxjs;
export const { fromEventPattern } = globalThis.rxjs;
export const { generate } = globalThis.rxjs;
export const { iif } = globalThis.rxjs;
export const { interval } = globalThis.rxjs;
export const { merge } = globalThis.rxjs;
export const { never } = globalThis.rxjs;
export const { of } = globalThis.rxjs;
export const { onErrorResumeNext } = globalThis.rxjs;
export const { pairs } = globalThis.rxjs;
export const { partition } = globalThis.rxjs;
export const { race } = globalThis.rxjs;
export const { range } = globalThis.rxjs;
export const { throwError } = globalThis.rxjs;
export const { timer } = globalThis.rxjs;
export const { using } = globalThis.rxjs;
export const { zip } = globalThis.rxjs;
export const { scheduled } = globalThis.rxjs;
export const { EMPTY } = globalThis.rxjs;
export const { NEVER } = globalThis.rxjs;
export const { config } = globalThis.rxjs;
export const { audit } = globalThis.rxjs;
export const { auditTime } = globalThis.rxjs;
export const { buffer } = globalThis.rxjs;
export const { bufferCount } = globalThis.rxjs;
export const { bufferTime } = globalThis.rxjs;
export const { bufferToggle } = globalThis.rxjs;
export const { bufferWhen } = globalThis.rxjs;
export const { catchError } = globalThis.rxjs;
export const { combineAll } = globalThis.rxjs;
export const { combineLatestAll } = globalThis.rxjs;
export const { combineLatestWith } = globalThis.rxjs;
export const { concatAll } = globalThis.rxjs;
export const { concatMap } = globalThis.rxjs;
export const { concatMapTo } = globalThis.rxjs;
export const { concatWith } = globalThis.rxjs;
export const { connect } = globalThis.rxjs;
export const { count } = globalThis.rxjs;
export const { debounce } = globalThis.rxjs;
export const { debounceTime } = globalThis.rxjs;
export const { defaultIfEmpty } = globalThis.rxjs;
export const { delay } = globalThis.rxjs;
export const { delayWhen } = globalThis.rxjs;
export const { dematerialize } = globalThis.rxjs;
export const { distinct } = globalThis.rxjs;
export const { distinctUntilChanged } = globalThis.rxjs;
export const { distinctUntilKeyChanged } = globalThis.rxjs;
export const { elementAt } = globalThis.rxjs;
export const { endWith } = globalThis.rxjs;
export const { every } = globalThis.rxjs;
export const { exhaust } = globalThis.rxjs;
export const { exhaustAll } = globalThis.rxjs;
export const { exhaustMap } = globalThis.rxjs;
export const { expand } = globalThis.rxjs;
export const { filter } = globalThis.rxjs;
export const { finalize } = globalThis.rxjs;
export const { find } = globalThis.rxjs;
export const { findIndex } = globalThis.rxjs;
export const { first } = globalThis.rxjs;
export const { groupBy } = globalThis.rxjs;
export const { ignoreElements } = globalThis.rxjs;
export const { isEmpty } = globalThis.rxjs;
export const { last } = globalThis.rxjs;
export const { map } = globalThis.rxjs;
export const { mapTo } = globalThis.rxjs;
export const { materialize } = globalThis.rxjs;
export const { max } = globalThis.rxjs;
export const { mergeAll } = globalThis.rxjs;
export const { flatMap } = globalThis.rxjs;
export const { mergeMap } = globalThis.rxjs;
export const { mergeMapTo } = globalThis.rxjs;
export const { mergeScan } = globalThis.rxjs;
export const { mergeWith } = globalThis.rxjs;
export const { min } = globalThis.rxjs;
export const { multicast } = globalThis.rxjs;
export const { observeOn } = globalThis.rxjs;
export const { pairwise } = globalThis.rxjs;
export const { pluck } = globalThis.rxjs;
export const { publish } = globalThis.rxjs;
export const { publishBehavior } = globalThis.rxjs;
export const { publishLast } = globalThis.rxjs;
export const { publishReplay } = globalThis.rxjs;
export const { raceWith } = globalThis.rxjs;
export const { reduce } = globalThis.rxjs;
export const { repeat } = globalThis.rxjs;
export const { repeatWhen } = globalThis.rxjs;
export const { retry } = globalThis.rxjs;
export const { retryWhen } = globalThis.rxjs;
export const { refCount } = globalThis.rxjs;
export const { sample } = globalThis.rxjs;
export const { sampleTime } = globalThis.rxjs;
export const { scan } = globalThis.rxjs;
export const { sequenceEqual } = globalThis.rxjs;
export const { share } = globalThis.rxjs;
export const { shareReplay } = globalThis.rxjs;
export const { single } = globalThis.rxjs;
export const { skip } = globalThis.rxjs;
export const { skipLast } = globalThis.rxjs;
export const { skipUntil } = globalThis.rxjs;
export const { skipWhile } = globalThis.rxjs;
export const { startWith } = globalThis.rxjs;
export const { subscribeOn } = globalThis.rxjs;
export const { switchAll } = globalThis.rxjs;
export const { switchMap } = globalThis.rxjs;
export const { switchMapTo } = globalThis.rxjs;
export const { switchScan } = globalThis.rxjs;
export const { take } = globalThis.rxjs;
export const { takeLast } = globalThis.rxjs;
export const { takeUntil } = globalThis.rxjs;
export const { takeWhile } = globalThis.rxjs;
export const { tap } = globalThis.rxjs;
export const { throttle } = globalThis.rxjs;
export const { throttleTime } = globalThis.rxjs;
export const { throwIfEmpty } = globalThis.rxjs;
export const { timeInterval } = globalThis.rxjs;
export const { timeout } = globalThis.rxjs;
export const { timeoutWith } = globalThis.rxjs;
export const { timestamp } = globalThis.rxjs;
export const { toArray } = globalThis.rxjs;
export const { window } = globalThis.rxjs;
export const { windowCount } = globalThis.rxjs;
export const { windowTime } = globalThis.rxjs;
export const { windowToggle } = globalThis.rxjs;
export const { windowWhen } = globalThis.rxjs;
export const { withLatestFrom } = globalThis.rxjs;
export const { zipAll } = globalThis.rxjs;
export const { zipWith } = globalThis.rxjs;
